from telebot.types import  Message,CallbackQuery
from loader import bot, db_api
from telebot import types
import keybords


@bot.callback_query_handler(func=lambda call: True)
def answer(call:CallbackQuery):
    if call.data == 'A':
        wallets = db_api.wallets().get_wallets_by_user_id(call.from_user.id)
        str = ""
        for wallet in wallets:
            str += wallet.name + " " + wallet.currency + " " + wallet.value.__str__() + "\n"

        markup = keybords.time_period()

        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id,
                                  text='–í—ã–±–µ—Ä–∏—Ç–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –¥–ª—è –≤–∞—Å –ø–µ—Ä–∏–æ–¥' + str, reply_markup=markup)
    elif call.data == 'currency_account_selection':
        markup = keybords.currency_account_selection()
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id,
                              text='–í—ã–±–µ—Ä–µ—Ç–µ –Ω—É–∂–Ω—ã–π —Å—á–µ—Ç:',reply_markup=markup)


    elif call.data == 'entering amount RUB':
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id,
                              text='–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É:')
        bot.register_next_step_handler(call.message,add_db)


def add_db(messege):
    bot.send_message(messege.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é : <b>1.–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–æ—Ö–æ–¥–æ–≤</b>  /  <b>2.–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ä–∞—Å—Ö–æ–¥–æ–≤</b>')


# –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –∫–Ω–æ–ø–æ–∫.
@bot.message_handler(content_types=['text'])
def bot_message(messege:Message):
    if messege.chat.type == 'private':
        if messege.text == '1. –î–æ–±–∞–≤–∏—Ç—å –¥–æ—Ö–æ–¥ ‚ôªÔ∏è':
            bot.send_message(messege.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–æ—Ö–æ–¥–∞:' )
            bot.register_next_step_handler(messege,summa)
        elif messege.text == '2. –î–æ–±–∞–≤–∏—Ç—å —Ä–∞—Å—Ö–æ–¥—ã ü™´':
            bot.send_message(messege.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Ä–∞—Å—Ö–æ–¥–∞:')
            #bot.register_next_step_handler(messege, sum_r)
        elif messege.text == '3. –ú–æ—è –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ üìà':
            wallets = db_api.wallets().get_wallets_by_user_id(messege.from_user.id)
            str = ""
            for wallet in wallets:
                str += wallet.name + " " + wallet.currency + " " + wallet.value.__str__() + "\n"
            bot.send_message(messege.chat.id, str)
            #bot.register_next_step_handler(messege,ball)
        elif messege.text == '4. –ú–æ–π –±–∞–ª–∞–Ω—Å üí∞':
            bot.register_next_step_handler(messege,categ)

'''–ë–ª–æ–∫ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π (–ö–ù–û–ü–ö–ê 4)'''


#–§—É–Ω–∫—Ü–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π
def categ(messege):
    markup = types.InlineKeyboardMarkup(row_width=1)
    change1 = types.InlineKeyboardButton('–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–æ—Ö–æ–¥–æ–≤',callback_data='1')
    change2 = types.InlineKeyboardButton('–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ä–∞—Å—Ö–æ–¥–æ–≤',callback_data='2')
    markup.add(change1,change2)
    bot.send_message(messege.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é : <b>1.–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–æ—Ö–æ–¥–æ–≤</b>  /  <b>2.–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ä–∞—Å—Ö–æ–¥–æ–≤</b>', reply_markup=markup,parse_mode='html')


@bot.callback_query_handler(func=lambda call: True)
def answer(call):
    global icome
    if call.data == '1':
        markup_reply = types.InlineKeyboardMarkup(row_width=2)
        icome1 = types.InlineKeyboardButton('–ó–∞—Ä–ø–ª–∞—Ç–∞  üíµ',callback_data='I')
        icome2 = types.InlineKeyboardButton('–ü–æ–¥—Ä–∞–±–æ—Ç–∫–∞ ‚õèÔ∏è',callback_data='II')
        icome3 = types.InlineKeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é ‚úÖ',callback_data='III')
        icome4 = types.InlineKeyboardButton('–£–¥–∞–ª–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é ‚ùå',callback_data='IV')
        markup_reply.add(icome1,icome2,icome3,icome4,)
        bot.send_message(call.message.chat.id,'<b>–í—ã–±–µ—Ä–µ—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:</b> ',parse_mode='html',reply_markup=markup_reply)


    elif call.data == '2':
        markup_reply1 = types.InlineKeyboardMarkup(row_width=2)
        icome5 = types.InlineKeyboardButton('–°–ø–æ—Ä—Ç üèÄ',callback_data='V')
        icome6 = types.InlineKeyboardButton('–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è üé•',callback_data='VI')
        icome7 = types.InlineKeyboardButton('–î–î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é ‚úÖ',callback_data='VII')
        icome8 = types.InlineKeyboardButton('–£–¥–∞–ª–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é ‚ùå',callback_data='VIII')
        markup_reply1.add(icome5,icome6,icome7,icome8)
        bot.send_message(call.message.chat.id, '<b>–í—ã–±–µ—Ä–µ—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:</b> ', parse_mode='html',
                         reply_markup=markup_reply1)

#–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –∫–Ω–æ–ø–æ–∫ –ö–∞—Ç–µ–≥–æ—Ä–∏–π(–ó–∞—Ä–ø–ª–∞—Ç–∞, –ü–æ–¥—Ä–∞–±–æ—Ç–∫–∞, –°–ø–æ—Ä—Ç, –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è)

    elif call.data == 'I':
        bot.send_message(call.message.chat.id, f'–î–æ—Ö–æ–¥ <b>{icome} —Ä—É–±</b> –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ <b>{b}</b> –¥–æ–±–∞–≤–ª–µ–Ω',
                         parse_mode='html')
    elif call.data == 'II':
        bot.send_message(call.message.chat.id, f'–î–æ—Ö–æ–¥ <b>{icome} —Ä—É–±</b> –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ <b>{c}</b> –¥–æ–±–∞–≤–ª–µ–Ω',
                         parse_mode='html')

    elif call.data == 'V':
        bot.send_message(call.message.chat.id, f'–†–∞—Å—Ö–æ–¥ <b>{expenditure} —Ä—É–±</b> –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ <b>{t}</b> –¥–æ–±–∞–≤–ª–µ–Ω',
                         parse_mode='html')

    elif call.data == 'VI':
        bot.send_message(call.message.chat.id, f'–†–∞—Å—Ö–æ–¥ <b>{expenditure} —Ä—É–±</b> –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ <b>{w}</b> –¥–æ–±–∞–≤–ª–µ–Ω',
                         parse_mode='html')





"""–ë–ª–æ–∫ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ –±–∞–ª–∞–Ω—Å—É (–ö–ù–û–ü–ö–ê 3). """


# –§—É–Ω–∫—Ü–∏—è –ø–æ–¥—Å—á–µ—Ç–∞ –±–∞–ª–∞–Ω—Å–∞.
def ball(messege):
    global icome
    global expenditure
    ballance = int(icome) - int(expenditure)
    bot.send_message(messege.chat.id, f'–í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–ª–∞–Ω—Å: <b>{ballance}</b> —Ä—É–±',
                     parse_mode='html')

""" –ë–ª–æ–∫ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ –¥–æ—Ö–æ–¥–∞–º (–ö–ù–û–ü–ö–ê 1). """


# –§—É–Ω–∫—Ü–∏—è –≤–≤–µ—Å—Ç–∏ –¥–æ—Ö–æ–¥.

def summa(messege):
    global icome
    icome = messege.text.strip()
    bot.send_message(messege.chat.id, '–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:')
    bot.register_next_step_handler(messege, categ )


""" –ë–ª–æ–∫ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ —Ä–∞—Å—Ö–æ–¥–∞–º (–ö–ù–û–ü–ö–ê 2). """


# –§—É–Ω–∫—Ü–∏—è –≤–≤–µ—Å—Ç–∏ —Ä–∞—Å—Ö–æ–¥.
def sum_r(messege):
    global expenditure
    expenditure = messege.text.strip()
    bot.send_message(messege.chat.id, '–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:')
    bot.register_next_step_handler(messege, categ )


bot.polling(none_stop=True, interval=0 )




