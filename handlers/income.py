import datetime

import expense
import keybords
from telebot.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from loader import bot, db_api
from DataBaseModel import Currencies

# –í—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –≤–≤–µ–¥—ë–Ω–Ω—ã—Ö —Å—É–º–º –¥–æ –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.
income_amounts = {}  # user_id -> —Å—É–º–º–∞

@bot.message_handler(func=lambda msg: msg.text == "1. –î–æ–±–∞–≤–∏—Ç—å –¥–æ—Ö–æ–¥ ‚ôªÔ∏è")
def handle_income_start(msg: Message):
    bot.send_message(msg.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–æ—Ö–æ–¥–∞:")
    bot.register_next_step_handler(msg, receive_income_amount)

def receive_income_amount(msg: Message):
    user_id = msg.from_user.id
    try:
        amount = float(msg.text.strip())
        income_amounts[user_id] = amount
        markup = InlineKeyboardMarkup(row_width=2)
        markup.add(
            InlineKeyboardButton("–ó–∞—Ä–ø–ª–∞—Ç–∞ üíµ", callback_data="income_salary"), # TODO - –º–æ–¥–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ –¥–æ—Ö–æ–¥–∞
            InlineKeyboardButton("–ü–æ–¥—Ä–∞–±–æ—Ç–∫–∞ ‚õèÔ∏è", callback_data="income_freelance")
        )
        bot.send_message(msg.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–æ—Ö–æ–¥–∞:", reply_markup=markup)
    except ValueError:
        bot.send_message(msg.chat.id, "–û—à–∏–±–∫–∞: –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É (–Ω–∞–ø—Ä–∏–º–µ—Ä, 15000.00).")
        bot.register_next_step_handler(msg, receive_income_amount)

@bot.callback_query_handler(func=lambda call: call.data in ["income_salary", "income_freelance"])
def handle_income_category(call: CallbackQuery):
    print("da da")
    user_id = call.from_user.id
    amount = income_amounts.get(user_id)
    if amount is None:
        bot.send_message(call.message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –≤–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–æ—Ö–æ–¥–∞.")
        return

    category = "–ó–∞—Ä–ø–ª–∞—Ç–∞" if call.data == "income_salary" else "–ü–æ–¥—Ä–∞–±–æ—Ç–∫–∞"

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    #TODO - –ø—Ä–æ–≤–∞–ª–∏–¥–∏—Ä–æ–≤–∞—Ç—å –≤—ã–∑–æ–≤—ã —Ö–µ–Ω–¥–ª–µ—Ä–æ–≤ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö, –µ—Å–ª–∏ —Ç–∞–∫–æ–≤—ã—Ö –Ω–µ—Ç
    # –¥–æ–±–∏–∞–≤–∏—Ç—å –∏–ª–∏ –º–æ–¥–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å —Ç–∞–∫–æ–≤—É—é
    db_api.transactions().add_transaction(
        user_id=user_id,
        amount=amount,
        category=category,
        report= "",
        date= datetime.datetime.now().__str__()
    )

    bot.send_message(
        call.message.chat.id,
        f"–î–æ—Ö–æ–¥ <b>{amount:.2f} —Ä—É–±</b> –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ <b>{category}</b> –¥–æ–±–∞–≤–ª–µ–Ω.",
        parse_mode="html"
    )

    # –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    del income_amounts[user_id]

@bot.callback_query_handler(func=lambda call: True)
def answer(call:CallbackQuery):
    if call.data == 'add income':
        wallets = db_api.wallets().get_wallets_by_user_id(call.from_user.id)
        str = ""
        for wallet in wallets:
            str += wallet.name + " " + wallet.currency.name + " " + wallet.value.__str__() + "\n"

        markup = keybords.currency_account_selection()

        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id,
                                  text='–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç—É:' + str, reply_markup=markup)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ 1.–†—É–±–ª–∏.
# ______________________________________________________________________________________________________________________

    elif call.data == 'entering_amount_RUB':
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id,
                              text='–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –≤ RUB:')
        bot.register_next_step_handler(call.message, add_db_rub)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ 2.–î–æ–ª–ª–∞—Ä—ã.
# ______________________________________________________________________________________________________________________

    elif call.data == 'entering_amount_USDT':
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id,
                              text='–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –≤ USD:')
        bot.register_next_step_handler(call.message, add_db_usd)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ 3.–ï–≤—Ä–æ.
# ______________________________________________________________________________________________________________________

    elif call.data == 'entering_amount_EUR':
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id,
                              text='–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –≤ EUR:')
        bot.register_next_step_handler(call.message, add_db_euro)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ 4.–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥.
# ______________________________________________________________________________________________________________________

    elif call.data == "go_to_back_menu":
        markup = keybords.go_to_menu()
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id,
                              text='*–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫*\n\n'
                                   '–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º *–æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ä–∞—Å—Ö–æ–¥—ã –∏ –≤–µ—Å—Ç–∏ —É—á—ë—Ç –¥–æ—Ö–æ–¥–æ–≤* –≤ —Ç–µ—á–µ–Ω–∏–µ –º–µ—Å—è—Ü–∞.\n\n'
                                   '*üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*\n\n'
                                   '1. *–î–æ–±–∞–≤–∏—Ç—å –¥–æ—Ö–æ–¥—ã* ‚Äî –æ–ø–µ—Ä–∞—Ü–∏—è –¥–æ—Ö–æ–¥–∞  \n'
                                   '2. *–î–æ–±–∞–≤–∏—Ç—å —Ä–∞—Å—Ö–æ–¥—ã* ‚Äî –æ–ø–µ—Ä–∞—Ü–∏—è —Ä–∞—Å—Ö–æ–¥–∞  \n'
                                   '3. *–ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞* ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–æ—Ö–æ–¥–æ–≤ –∏ —Ä–∞—Å—Ö–æ–¥–æ–≤ –∑–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥  \n'
                                   '4. *–ú–æ–π –±–∞–ª–∞–Ω—Å* ‚Äî —Ç–µ–∫—É—â–∏–π —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π –±–∞–ª–∞–Ω—Å\n\n'
                                   '*üí¨ –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞:*\n\n'
                                   '/balance ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å  \n'
                                   '/categories ‚Äî —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π  \n'
                                   '/set_category <–Ω–∞–∑–≤–∞–Ω–∏–µ> [—Ç–∏–ø] ‚Äî –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é (—Ç–∏–ø = income –∏–ª–∏ expense, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é expense)  \n'
                                   '/remove_category <–Ω–∞–∑–≤–∞–Ω–∏–µ> ‚Äî —É–¥–∞–ª–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é', reply_markup=markup,
                              parse_mode='Markdown')

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫(–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é)5.–û–ø–∏—Å–∞–Ω–∏–µ.
# ______________________________________________________________________________________________________________________

    elif call.data == "description":
        markup = keybords.go_to_menu()
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id,
                              text='*–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫*\n\n'
                                   '–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º *–æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ä–∞—Å—Ö–æ–¥—ã –∏ –≤–µ—Å—Ç–∏ —É—á—ë—Ç –¥–æ—Ö–æ–¥–æ–≤* –≤ —Ç–µ—á–µ–Ω–∏–µ –º–µ—Å—è—Ü–∞.\n\n'
                                   '*üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*\n\n'
                                   '1. *–î–æ–±–∞–≤–∏—Ç—å –¥–æ—Ö–æ–¥—ã* ‚Äî –æ–ø–µ—Ä–∞—Ü–∏—è –¥–æ—Ö–æ–¥–∞  \n'
                                   '2. *–î–æ–±–∞–≤–∏—Ç—å —Ä–∞—Å—Ö–æ–¥—ã* ‚Äî –æ–ø–µ—Ä–∞—Ü–∏—è —Ä–∞—Å—Ö–æ–¥–∞  \n'
                                   '3. *–ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞* ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–æ—Ö–æ–¥–æ–≤ –∏ —Ä–∞—Å—Ö–æ–¥–æ–≤ –∑–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥  \n'
                                   '4. *–ú–æ–π –±–∞–ª–∞–Ω—Å* ‚Äî —Ç–µ–∫—É—â–∏–π —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π –±–∞–ª–∞–Ω—Å\n\n'
                                   '*üí¨ –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞:*\n\n'
                                   '/balance ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å  \n'
                                   '/categories ‚Äî —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π  \n'
                                   '/set_category <–Ω–∞–∑–≤–∞–Ω–∏–µ> [—Ç–∏–ø] ‚Äî –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é (—Ç–∏–ø = income –∏–ª–∏ expense, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é expense)  \n'
                                   '/remove_category <–Ω–∞–∑–≤–∞–Ω–∏–µ> ‚Äî —É–¥–∞–ª–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é', reply_markup=markup,
                              parse_mode='Markdown')

# –î–æ–±–∞–≤–¥–ª–µ–Ω–∏–µ RUS RUB –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.
# ______________________________________________________________________________________________________________________


    #–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏(transactions)
def add_db_rub(messege:Message):
    user_id = messege.from_user.id
    currency_id = id(Currencies)
    amount = float(messege.text)
    category = 'income'
    db_api.transactions().add_transaction(user_id=user_id,currency_id=currency_id,
                                          amount=amount,
                                          category=category,
                                          report="",
                                          date=datetime.datetime.now().__str__())
    #–í–∞–ª—é—Ç–∞(currencies)
    symbol = str("‚ÇΩ")
    name = str("–†–æ—Å—Å–∏–π—Å–∫–∏–π —Ä—É–±–ª—å")
    code = str("RUB")
    """
    db_api.currencies().add_currencies(
                                       symbol=symbol,
                                       name=name,
                                       code=code)
    """
    markup = keybords.go_to_menu()
    bot.send_message(messege.chat.id, f'–î–æ—Ö–æ–¥ –¥–æ–±–∞–≤–ª–µ–Ω:{amount} {symbol}',reply_markup=markup)




# –î–æ–±–∞–≤–¥–ª–µ–Ω–∏–µ USD –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.
# ______________________________________________________________________________________________________________________

    #–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏(transactions)
def add_db_usd(messege:Message):
    user_id = messege.from_user.id
    currency_id = id(Currencies)
    amount = float(messege.text)
    category = 'income'
    db_api.transactions().add_transaction(user_id=user_id,currency_id=currency_id,
                                          amount=amount,
                                          category=category,
                                          report="",
                                          date=datetime.datetime.now().__str__())
    symbol = str("‚ÇΩ")
    name = str("–†–æ—Å—Å–∏–π—Å–∫–∏–π —Ä—É–±–ª—å")
    code = str("RUB")
    """
    db_api.currencies().add_currencies(
                                       symbol=symbol,
                                       name=name,
                                       code=code)
    """
    markup = keybords.go_to_menu()
    bot.send_message(messege.chat.id, f'–î–æ—Ö–æ–¥ –¥–æ–±–∞–≤–ª–µ–Ω:{amount} {symbol}',reply_markup=markup)



# –î–æ–±–∞–≤–¥–ª–µ–Ω–∏–µ EUR –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.
# ______________________________________________________________________________________________________________________

    # –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏(transactions)
def add_db_euro(messege:Message):
    user_id = messege.from_user.id
    amount = float(messege.text)
    currency_id = id(Currencies)
    category = 'income'
    db_api.transactions().add_transaction(user_id=user_id,currency_id=currency_id,
                                          amount=amount,
                                          category=category,
                                          report="",
                                          date=datetime.datetime.now().__str__())
    symbol = str("‚ÇΩ")
    name = str("–†–æ—Å—Å–∏–π—Å–∫–∏–π —Ä—É–±–ª—å")
    code = str("RUB")
    """
    db_api.currencies().add_currencies(
                                       symbol=symbol,
                                       name=name,
                                       code=code)
    """
    markup = keybords.go_to_menu()
    bot.send_message(messege.chat.id, f'–î–æ—Ö–æ–¥ –¥–æ–±–∞–≤–ª–µ–Ω:{amount} {symbol}', reply_markup=markup)







