from telebot.types import Message
from datetime import datetime
from loader import bot, db_api
from telebot.states.sync.context import StateContext
import keybords
from transactions_states import MyStates
from calendar_tg import DetailedTelegramCalendar, LSTEP

@bot.message_handler(commands=['start'])
def main(messege: Message, state: StateContext):
    state.set(MyStates.menu_state)
    markup = keybords.go_to_menu()
    bot.send_message(messege.chat.id,
                     '–ü—Ä–∏–≤–µ—Ç, ‚Ä¶! –Ø –ø–æ–º–æ–≥—É –≤–µ—Å—Ç–∏ —É—á—ë—Ç –¥–æ—Ö–æ–¥–æ–≤ –∏ —Ä–∞—Å—Ö–æ–¥–æ–≤. –ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã, –≤–≤–µ–¥–∏—Ç–µ /help',
                            reply_markup=markup)
    db_api.users().add_user(messege.from_user.id, messege.from_user.first_name, messege.from_user.last_name,
                            messege.from_user.username, datetime.now().__str__())



@bot.message_handler(commands=['calendar'])
def start(m):
    calendar, step = DetailedTelegramCalendar().build()
    bot.send_message(m.chat.id,
                     f"Select {LSTEP[step]}",
                     reply_markup=calendar)

@bot.callback_query_handler(func=lambda call: True, state="*")
def cal(c):
    print("yes")
    result, key, step = DetailedTelegramCalendar().process(c.data)
    if not result and key:
        bot.edit_message_text(f"Select {LSTEP[step]}",
                              c.message.chat.id,
                              c.message.message_id,
                              reply_markup=key)
    elif result:
        bot.edit_message_text(f"You selected {result}",
                              c.message.chat.id,
                              c.message.message_id)



@bot.message_handler(commands=['help'], state="*")
def info(messege):
    markup = keybords.go_to_menu()

    bot.send_message(messege.chat.id,
                     "ü§ñ *–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫*\n\n"
                     "–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º *–æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ä–∞—Å—Ö–æ–¥—ã –∏ –≤–µ—Å—Ç–∏ —É—á—ë—Ç –¥–æ—Ö–æ–¥–æ–≤* –≤ —Ç–µ—á–µ–Ω–∏–µ –º–µ—Å—è—Ü–∞.\n\n"
                     "*üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*\n\n"
                     "1. *–î–æ–±–∞–≤–∏—Ç—å –¥–æ—Ö–æ–¥—ã* ‚Äî –æ–ø–µ—Ä–∞—Ü–∏—è –¥–æ—Ö–æ–¥–∞  \n"
                     "2. *–î–æ–±–∞–≤–∏—Ç—å —Ä–∞—Å—Ö–æ–¥—ã* ‚Äî –æ–ø–µ—Ä–∞—Ü–∏—è —Ä–∞—Å—Ö–æ–¥–∞  \n"
                     "3. *–ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞* ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–æ—Ö–æ–¥–æ–≤ –∏ —Ä–∞—Å—Ö–æ–¥–æ–≤ –∑–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥  \n"
                     "4. *–ú–æ–π –±–∞–ª–∞–Ω—Å* ‚Äî —Ç–µ–∫—É—â–∏–π —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π –±–∞–ª–∞–Ω—Å\n\n"
                     "*üí¨ –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞:*\n\n"
                     "/balance ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å  \n"
                     "/categories ‚Äî —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π  \n"
                     "/set_category <–Ω–∞–∑–≤–∞–Ω–∏–µ> [—Ç–∏–ø] ‚Äî –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é (—Ç–∏–ø = income –∏–ª–∏ expense, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é expense)  \n"
                     "/remove_category <–Ω–∞–∑–≤–∞–Ω–∏–µ> ‚Äî —É–¥–∞–ª–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é",
                     reply_markup=markup,
                     parse_mode='Markdown')
class MyStyleCalendar(DetailedTelegramCalendar):
    # previous and next buttons style. they are emoji now!
    prev_button = "‚¨ÖÔ∏è"
    next_button = "‚û°Ô∏è"
    # you do not want empty cells when month and year are being selected
    empty_month_button = ""
    empty_year_button = ""



